{"version":3,"sources":["utils/round.js","utils/calculatePayout.js","utils/sumPayout.js","components/Bets.js","components/Button.js","components/Layout.js","types.js","components/BetGrid.js","utils/sumCost.js","components/ManualBet.js","components/Header.js","images/SettingsIcon.js","components/SettingsHeader.js","pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["round","number","places","Math","pow","calculatePayout","bet","amount","odds","payout","cost","addPayoutToTotal","total","sumPayout","bets","reduce","TD","styled","td","TH","withComponent","Bets","name","length","slice","reverse","map","i","key","toFixed","colSpan","Button","button","Layout","div","OddType","PropTypes","shape","isRequired","BetType","a","b","arrayOf","BetGrid","sumCost","ManualBet","betOnA","betOnB","book","onClick","Header","header","SettingsIcon","height","version","viewBox","width","xmlns","fill","fillRule","id","stroke","strokeWidth","transform","d","H1","h1","SettingsButton","Settings","open","SettingsError","defaultCalcFnStr","trim","SettingsHeader","settings","setSettings","React","useState","setOpen","calcFnStr","setCalcFnStr","error","setError","setCalculateOdds","debounce","value","calculateOdds","Function","e","useEffect","htmlFor","onChange","event","currentTarget","message","H2","h2","Section","section","SectionOutcome","SectionError","OutcomeGrid","BookGrid","ToggleButton","defaultOdds","defaultSettings","Object","assign","OddsFnError","Error","MainPage","setBook","setOdds","autoBet","setAutoBet","newOdds","fraction","assertOddsValid","JSON","stringify","houseWinningsForA","houseWinningsForB","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.78965e5a.chunk.js","sourcesContent":["\nconst round = (number, places) => Math.round(number * Math.pow(10, places)) / Math.pow(10, places)\n\nexport default round","import round from './round'\nconst calculatePayout = bet => round((bet.amount * (bet.odds.payout  / bet.odds.cost)), 2)\n\nexport default calculatePayout","import calculatePayout from './calculatePayout'\n\nconst addPayoutToTotal = (total, bet) => total + calculatePayout(bet)\n\nconst sumPayout = bets => bets.reduce(addPayoutToTotal, 0)\n\nexport default sumPayout","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nimport calculatePayout from 'utils/calculatePayout'\nimport sumPayout from 'utils/sumPayout'\n\n\nconst TD = styled.td`\n  padding: 4px;\n`\n\nconst TH = TD.withComponent('th')\n\nconst Bets = ({ bets, name }) => {\n  if (bets.length === 0) return null\n\n  return (\n    <div>\n      <h3>Bets on {name}</h3>\n      <table>\n        <thead>\n          <tr>\n            <TH>Cost</TH>\n            <TH>Odds</TH>\n            <TH>Payout</TH>\n          </tr>\n        </thead>\n        <tbody>\n          {bets.slice().reverse().map((bet, i) => (<tr key={i}>\n            <TD>{bet.amount}</TD>\n            <TD>{bet.odds.cost}:{bet.odds.payout}</TD>\n            <TD>${calculatePayout(bet).toFixed(2)}</TD>\n          </tr>))}\n        </tbody>\n        <tfoot>\n          <tr>\n            <th colSpan={2}>Total Payout</th>\n            <td>${sumPayout(bets).toFixed(2)}</td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  )\n}\n\nBets.propTypes = {\n  name: PropTypes.string.isRequired,\n  bets: PropTypes.arrayOf(PropTypes.shape({\n    amount: PropTypes.number.isRequired,\n    odds: PropTypes.shape({\n      cost: PropTypes.number.isRequired,\n      payout: PropTypes.number.isRequired,\n    }),\n  })).isRequired,\n}\n\nexport default Bets","import styled from '@emotion/styled'\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: solid 1px #282c34;\n  font-size: 24px;\n  padding: 8px 32px;\n  margin: 16px;\n`\n\nexport default Button","import styled from '@emotion/styled'\n\nconst Layout = styled.div`\n  text-align: center;\n`\n\nexport default Layout","import PropTypes from 'prop-types'\n\nexport const OddType = PropTypes.shape({\n  cost: PropTypes.number.isRequired,\n  payout: PropTypes.number.isRequired,\n})\n\nexport const OddsType = PropTypes.shape({\n  a: OddType,\n  b: OddType,\n})\n\nexport const BetType = PropTypes.shape({\n  amount: PropTypes.number.isRequired,\n  odds: OddType,\n})\n\nexport const BookType = PropTypes.shape({\n  a: PropTypes.arrayOf(BetType).isRequired,\n  b: PropTypes.arrayOf(BetType).isRequired,\n})","import styled from '@emotion/styled'\n\nconst BetGrid = styled.div`\n  max-width: 400px;\n  display: grid;\n  grid-template-columns: auto auto;\n`\n\nexport default BetGrid","\nconst sumCost = bets => bets.reduce((total, bet) => total + bet.amount, 0)\n\nexport default sumCost","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { BookType, OddsType } from 'types'\nimport BetGrid from 'components/BetGrid'\nimport Button from 'components/Button'\nimport sumCost from 'utils/sumCost'\n\nconst ManualBet = ({ betOnA, betOnB, book, odds }) => (\n  <BetGrid>\n    <p>{odds.a.cost}:{odds.a.payout}</p>\n    <p>{odds.b.cost}:{odds.b.payout}</p>\n    <Button onClick={betOnA}>A</Button>\n    <Button onClick={betOnB}>B</Button>\n    <div>\n      <h5>Pot A</h5>\n      <p>${sumCost(book.a)}</p>\n    </div>\n\n    <div>\n      <h5>Pot B</h5>\n      <p>${sumCost(book.b)}</p>\n    </div>\n  </BetGrid>\n)\n\nManualBet.propTypes = {\n  betOnA: PropTypes.func.isRequired,\n  betOnB: PropTypes.func.isRequired,\n  book: BookType.isRequired,\n  odds: OddsType.isRequired,\n}\n\nexport default ManualBet","import styled from '@emotion/styled'\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 25vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n  position: relative;\n`\n\nexport default Header","import React from 'react'\n\nconst SettingsIcon = () => (\n  <svg height=\"20px\" version=\"1.1\" viewBox=\"0 0 20 20\" width=\"20px\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>Settings</title>\n\n    <g fill=\"none\" fillRule=\"evenodd\" id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\">\n      <g fill=\"currentColor\" id=\"Core\" transform=\"translate(-464.000000, -380.000000)\">\n\n        <g id=\"settings\" transform=\"translate(464.000000, 380.000000)\">\n          <path\n            d=\"M17.4,11 C17.4,10.7 17.5,10.4 17.5,10 C17.5,9.6 17.5,9.3 17.4,9 L19.5,7.3 C19.7,7.1 19.7,6.9 19.6,6.7 L17.6,3.2 C17.5,3.1 17.3,3 17,3.1 L14.5,4.1 C14,3.7 13.4,3.4 12.8,3.1 L12.4,0.5 C12.5,0.2 12.2,0 12,0 L8,0 C7.8,0 7.5,0.2 7.5,0.4 L7.1,3.1 C6.5,3.3 6,3.7 5.4,4.1 L3,3.1 C2.7,3 2.5,3.1 2.3,3.3 L0.3,6.8 C0.2,6.9 0.3,7.2 0.5,7.4 L2.6,9 C2.6,9.3 2.5,9.6 2.5,10 C2.5,10.4 2.5,10.7 2.6,11 L0.5,12.7 C0.3,12.9 0.3,13.1 0.4,13.3 L2.4,16.8 C2.5,16.9 2.7,17 3,16.9 L5.5,15.9 C6,16.3 6.6,16.6 7.2,16.9 L7.6,19.5 C7.6,19.7 7.8,19.9 8.1,19.9 L12.1,19.9 C12.3,19.9 12.6,19.7 12.6,19.5 L13,16.9 C13.6,16.6 14.2,16.3 14.7,15.9 L17.2,16.9 C17.4,17 17.7,16.9 17.8,16.7 L19.8,13.2 C19.9,13 19.9,12.7 19.7,12.6 L17.4,11 L17.4,11 Z M10,13.5 C8.1,13.5 6.5,11.9 6.5,10 C6.5,8.1 8.1,6.5 10,6.5 C11.9,6.5 13.5,8.1 13.5,10 C13.5,11.9 11.9,13.5 10,13.5 L10,13.5 Z\"\n            id=\"Shape\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n)\n\nexport default SettingsIcon","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { debounce } from 'debounce'\n\nimport Header from 'components/Header'\nimport SettingsIcon from 'images/SettingsIcon'\n\nconst H1 = styled.h1`\n  margin: 0;\n`\n\n\nconst SettingsButton = styled.button`\n  color: white;\n  text-decoration: none;\n  background: none;\n  border: none;\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 8px;\n`\n\nconst Settings = styled.div(({ open }) => `\n  display: ${open ? 'flex' : 'none'};\n  flex-direction: column;\n  align-items: center;\n  padding: 32px 8px;\n\n  label {\n    margin-bottom: 8px;\n  }\n\n  textarea {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    font-size: 24px;\n    background: #282c34;\n    color: white;\n    height: 25vh;\n    width: 50vw;\n  }\n`)\n\nconst SettingsError = styled.div`\n  background-color: #ff0000;\n  color: white;\n  width: 100vw;\n  padding: 32px 8px;\n\n  h2 {\n    font-size: 24px;\n    margin: 0;\n  }\n\n  p {\n    font-size: 16px;\n  }\n`\n\nconst defaultCalcFnStr = `\nconst [book, { fraction, sumPayout }] = arguments\n\nif (book.a.length === 0 || book.b.length === 0) {\n  return { a: { cost: 1, payout: 1 }, b: { cost: 1, payout: 1 } } \n}\n\nconst sumAPayout = sumPayout(book.a)\nconst sumBPayout = sumPayout(book.b)\n\nconst f = fraction(sumAPayout, sumBPayout)\n\nreturn {\n  a: { cost: f.fraction.numerator, payout: f.fraction.denominator },\n  b: { cost: f.fraction.denominator, payout: f.fraction.numerator },\n}\n`.trim()\n\nconst SettingsHeader = ({ settings, setSettings }) => {\n  const [open, setOpen] = React.useState(false)\n  const [calcFnStr, setCalcFnStr] = React.useState(defaultCalcFnStr)\n  const [error, setError] = React.useState(null)\n\n  const setCalculateOdds = debounce(value => {\n    try {\n      // eslint-disable-next-line\n      const calculateOdds = new Function(value)\n      setError(null)\n      setSettings({ ...settings, calculateOdds })\n    } catch (e) {\n      setError(e)\n    }\n  }, 1000)\n\n  React.useEffect(() => {\n    setCalculateOdds(calcFnStr)\n  }, [calcFnStr, setCalculateOdds])\n\n  return (<Header>\n    <SettingsButton onClick={() => setOpen(!open)}>\n      <SettingsIcon />\n    </SettingsButton>\n    <H1>Odds Stabilizer</H1>\n    <Settings open={open}>\n      <label htmlFor=\"calculate-odds-fn\">Odds calculation</label>\n      <textarea \n        id=\"caluclate-odds-fn\" \n        value={calcFnStr} \n        onChange={event => setCalcFnStr(event.currentTarget.value) } />\n    </Settings>\n    {error && (\n      <SettingsError>\n        <h2>Syntax Error</h2>\n        <p>{error.message}</p>\n      </SettingsError>\n    )}\n  </Header>)\n}\n\nSettingsHeader.propTypes = {\n  settings: PropTypes.shape({\n    calculateOdds: PropTypes.func.isRequired,\n  }).isRequired,\n  setSettings: PropTypes.func.isRequired,\n}\n\nexport default SettingsHeader","import React from 'react'\nimport styled from '@emotion/styled'\nimport fraction from 'fraction-calculator'\n\nimport Bets from 'components/Bets'\nimport Button from 'components/Button'\nimport Layout from 'components/Layout'\nimport ManualBet from 'components/ManualBet'\nimport SettingsHeader from 'components/SettingsHeader'\nimport sumCost from 'utils/sumCost'\nimport sumPayout from 'utils/sumPayout'\n\nconst houseWinningsForA = book => sumCost(book.b) - sumPayout(book.a)\nconst houseWinningsForB = book => sumCost(book.a) - sumPayout(book.b)\n\nconst H2 = styled.h2`\n  font-size: 24px;\n  margin: 0;\n`\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 32px 8px;\n\n  h2 {\n    margin-bottom: 16px;\n  }\n`\n\nconst SectionOutcome = styled(Section)`\n  background-color: #282c34;\n  color: white;\n`\n\nconst SectionError = styled(Section)`\n  background-color: #ff0000;\n  color: white;\n\n  pre {\n    text-align: left;\n  }\n`\n\nconst OutcomeGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  max-width: 400px;\n\n  dt {\n    text-align: left;\n  }\n\n  dd {\n    text-align: right;\n    font-weight: bold;\n  }\n`\n\nconst BookGrid = styled.div`\n  display: grid;\n  grid-template-columns: max-content max-content;\n  grid-column-gap: 8px;\n\n  @media (max-width: 400px) {\n    grid-template-columns: max-content;\n    grid-row-gap: 4px;\n\n    > :not(:last-of-type) {\n      padding-bottom: 16px;\n      border-bottom: solid 1px #000;\n    }\n  }\n`\n\nconst ToggleButton = styled(Button)`\n  ${({ value }) => value && `\n    background-color: #282c34;\n    color: white;\n  `}\n`\n\nconst defaultOdds = {\n  a: { cost: 1, payout: 1 }, \n  b: { cost: 1, payout: 1 }, \n}\n\nconst defaultSettings = {\n  calculateOdds: () => Object.assign({}, defaultOdds),\n}\n\nclass OddsFnError extends Error {\n  constructor(message, odds) {\n    super()\n    this.message = message\n    this.odds = odds\n  }\n}\n\nconst assertOddsValid = odds => {\n  if (!odds.a) throw new OddsFnError('odds calculation function did not return a value for \"a\"', odds) \n  if (typeof odds.a.cost !== 'number') throw new OddsFnError('odds calculation function did not return a number for \"a.cost\"', odds) \n  if (typeof odds.a.payout !== 'number') throw new OddsFnError('odds calculation function did not return a number for \"a.payout\"', odds) \n\n  if (!odds.b) throw new OddsFnError('odds calculation function did not return a value for \"b\"', odds) \n  if (typeof odds.b.cost !== 'number') throw new OddsFnError('odds calculation function did not return a number for \"b.cost\"', odds) \n  if (typeof odds.b.payout !== 'number') throw new OddsFnError('odds calculation function did not return a number for \"b.payout\"', odds) \n}\n\nconst MainPage = () => {\n  const [settings, setSettings] = React.useState(defaultSettings)\n  const [book, setBook] = React.useState({ a: [], b: [] })\n  const [odds, setOdds] = React.useState(defaultOdds)\n  const [error, setError] = React.useState(null)\n  const [autoBet, setAutoBet] = React.useState(false)\n\n  React.useEffect(() => {\n    try {\n      const newOdds = settings.calculateOdds(book, { fraction, sumPayout }) \n      assertOddsValid(newOdds)\n      setOdds(newOdds)\n      setError(null)\n    } catch (e) {\n      setError(e)\n    }\n  }, [book, settings])\n\n  const betOnA = () => setBook({ ...book, a: [...book.a, { amount: 1, odds: odds.a }] })\n  const betOnB = () => setBook({ ...book, b: [...book.b, { amount: 1, odds: odds.b }] })\n\n  return (\n    <Layout>\n      <SettingsHeader settings={settings} setSettings={setSettings} />\n      <main>\n        {error && (\n          <SectionError>\n            <h2>Execution Error</h2>\n            <p>{error.message}</p>\n            {error.odds && <pre>{JSON.stringify(error.odds, null, 2)}</pre>}\n          </SectionError>)}\n        <Section>\n          <H2>Bet</H2>\n          <ToggleButton \n            value={autoBet}\n            onClick={() => setAutoBet(!autoBet)} >\n              Auto Bet\n          </ToggleButton>\n          {autoBet \n            ? <h2>Auto Bet coming soon™</h2>\n            : <ManualBet betOnA={betOnA} betOnB={betOnB} book={book} odds={odds} />}\n        </Section>\n        <SectionOutcome>\n          <H2>Outcomes</H2>\n          <OutcomeGrid>\n            <dt>If A wins the house wins:</dt>\n            <dd>${houseWinningsForA(book).toFixed(2)}</dd>\n\n            <dt>If B wins the house has:</dt>\n            <dd>${houseWinningsForB(book).toFixed(2)}</dd>\n          </OutcomeGrid>\n        </SectionOutcome>\n        <Section>\n          <BookGrid>\n            <Bets name=\"A\" bets={book.a} />\n            <Bets name=\"B\" bets={book.b} />\n          </BookGrid>\n        </Section>\n      </main>\n    </Layout>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport MainPage from './pages/MainPage'\n\nconst App = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\">\n        <MainPage />\n      </Route>\n    </Switch>\n  </HashRouter>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}